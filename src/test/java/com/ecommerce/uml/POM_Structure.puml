@startuml
'https://plantuml.com/class-diagram

'hide fields

abstract class BasePage {
- WebDriver driver
+ BasePage(WebDriver driver)
+ WebDriver getDriver()
+ Header getHeader()
+ Footer getFooter()
}

class Header {
# headerHome: By
# headerStore: By
# headerMen: By
# headerWomen: By
# headerAccessories: By
# headerAccount: By
# headerAbout: By
# headerContactUs: By
# headerCartButton: By
}

class Footer {
# quickLinksHome: By
# quickLinksAbout: By
# quickLinksMyAccount: By
# quickLinksCart: By
# quickLinksContactUs: By

# forHerWomen: By
# forHerWomenJeans: By
# forHerWomenShirts: By
# forHerWomenShoes: By
# forHerAccessories: By

# forHimMen: By
# forHimMenJeans: By
# forHimMenShirts: By
# forHimMenShoes: By
# forHimAccessories: By

# appStoreIcon: By
# googlePlayIcon: By
}

class AccessoriesPage{
# addToCartButton: By
+ AccessoriesPage(WebDriver driver)
+ public void load()
+ AccessoriesPage addToCartFromAccessoriesPage()
+ CartPage clickCartPage()
}

class AccountPage {
# emailField: By
# passwordField: By
# loginButton: By
# storePageLink: By
# cartIcon: By
+ AccountPage(WebDriver driver)
+ load()
+ logIn()
+ logIn(String email, String password)
+ StorePage navigateToStorePage()
+ CartPage navigateToCartPage()
+ MenPage navigateToMenPage()
+ WomenPage navigateToWomenPage()
+ AccessoriesPage navigateToAccessoriesPage()
+ LostPasswordPage navigateToLostPasswordPage()
}

class CartPage {
# checkoutButton: By
# cartIcon: By
# removeButton: By
+ CartPage(WebDriver driver)
+ load()
+ CheckoutPage clickCheckoutButton()
+ CartPage clickViewCartButton()
+ int getProductsQuantity()
+ resetValueOfProductQuantity()
+ String getCartItemsNumber()
+ removeItemsFromCart()
+ String getEmptyCartMessage()
+ HomePage clickReturnToShopButton()
+ StorePage navigateToStorePage()
+ setZeroValueOfProductQuantity()
+ removeItemsFromCartPreview()
}

class CheckoutPage{
# firstNameField: By
# lastNameField: By
# companyNameField: By
# streetAddressField: By
# townField: By
# zipField: By
# emailField: By
# placeOrderButton: By
+ CheckoutPage(WebDriver driver)
+ load()
+ CheckoutPage inputFirstName(String firstName)
+ CheckoutPage inputLastName(String lastName)
+ CheckoutPage inputCompanyName(String companyName)
+ CheckoutPage inputStreetAddress(String streetAddress)
+ CheckoutPage inputTown(String town)
+ CheckoutPage inputZip(String zip)
+ CheckoutPage inputEmail(String email)
+ OrderReceivedPage clickPlaceOrderButton()
+ CheckoutPage inputCountry(String country)
+ CheckoutPage clickBillingCountryDropDown(String country)
+ CheckoutPage clickBillingStateDropDown(String country)
+ String productNameAndQuantity()
+ String checkYourOrderHasBeenReceivedMessage()
}

class HomePage{
# shopButton: By
# manCategory: By
# accountHeaderLink: By

+ HomePage(WebDriver driver)
+ load()
+ StorePage navigateToStorePage()
+ MenPage navigateToMenPage()
+ StorePage shopNowButton()
+ AccountPage navigateToAccountPage()
+ CartPage navigateToCartPage()
+ int getAmountOfProductsFromCartIcon()
+ int getAmountOfProductsFromCartIconAfterIncrease(int quantity)
+ addFirstProductToCart()
}
class LostPasswordPage {
# emailInputToResetPassword: By
# resetPasswordBtn: By
# passwordResetNotification: By
# errorMessageInvalidEmail: By
+ LostPasswordPage (WebDriver driver)
+ load()
+ LostPasswordPage inputValidEmail()
+ LostPasswordPage inputInvalidEmail()
+ LostPasswordPage clickResetPasswordBtn()
+ String getTextResetPasswordNotification()
+ String getTextErrorMassageInvalidEmail()
}

class MenPage{
# singleItemContainer: By
# saleTag: By
# crossedOutPrice: By

+ MenPage(WebDriver driver)
+ load()
'+ List<Boolean> areProductsOnSaleHaveCrossedPrice()
+ List<String> collectCategories()
+ MenPage addToCartFromManPage()
+ CartPage clickCartPage()

}

class OrderReceivedPage {
# notice: By

+ OrderReceivedPage(WebDriver driver)
+ String collectNotice()

}

class ProductPage{
+ ProductPage(WebDriver driver)
}

abstract class PurchasePage{
+ PurchasePage(WebDriver driver)
}

abstract class SalesPage{
# searchField: By
# searchButton: By

+ SalesPage(WebDriver driver)
+ StorePage searchProduct(String item)
+ List<Boolean> areProductsOnSaleHaveCrossedPrice()
+ SalesPage sortByDropDownButton()
+ SalesPage sortByPrice(String priceType)
}

class StorePage{
# headerTitle: By
# loopProducts: By
# addToCartButton: By
# cartButton" By

+ StorePage(WebDriver driver)
+ load()
+ List<String> getAllItemsFromAllPages(By locator, WebDriver driver)
+ String getSearchHeaderTitle()
+ String getTextFromListProducts(int number)
+ StorePage addToCartFromStorePage()
+ CartPage clickCartPage()
+ boolean areItemsInAlphabeticalOrder()
+ StorePage chooseAnItemByClickingAddToCart(String item)
+ String checkProductNameOnCartPage(String item)
}

class WomenPage{
# addToCartButton: By
# cartButton: By

+ WomenPage(WebDriver driver)
+ load()
+ WomenPage addToCartFromWomenPage()
+ CartPage clickCartPage()

}

interface Loadable {
 load();
}

BasePage <|-- AccountPage
BasePage <|-- CartPage
BasePage <|-- CheckoutPage
BasePage <|-- OrderReceivedPage
BasePage <|-- PurchasePage
BasePage <|-- LostPasswordPage
BasePage *-- Header
BasePage *-- Footer

PurchasePage <|-- HomePage
PurchasePage <|-- ProductPage
PurchasePage <|-- SalesPage

SalesPage <|-- MenPage
SalesPage <|-- WomenPage
SalesPage <|-- StorePage
SalesPage <|-- AccessoriesPage

@enduml